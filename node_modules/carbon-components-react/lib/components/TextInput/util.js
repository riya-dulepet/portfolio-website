"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.textInputProps = void 0;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var invalidProps = function invalidProps(invalidId) {
  return {
    'data-invalid': true,
    'aria-invalid': true,
    'aria-describedby': invalidId
  };
};

var warnProps = function warnProps(warnId) {
  return {
    'aria-describedby': warnId
  };
};

var textInputProps = function textInputProps(_ref) {
  var sharedTextInputProps = _ref.sharedTextInputProps,
      invalid = _ref.invalid,
      invalidId = _ref.invalidId,
      warn = _ref.warn,
      warnId = _ref.warnId;
  return _objectSpread(_objectSpread(_objectSpread({}, sharedTextInputProps), invalid ? invalidProps(invalidId) : {}), warn ? warnProps(warnId) : {});
};

exports.textInputProps = textInputProps;